<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&display=swap" rel="stylesheet">
    <title>PL Chatbot</title>
    <style>
        body {
              background-image: url('giphy.webp');
              background-position: center center;
              background-repeat: no-repeat;
              background-size: cover;
              background-attachment: fixed;


            font-family: 'Arial', sans-serif;

            margin: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

         hr {
          height: 1px;
          border: none;
          background: linear-gradient(to right, transparent, black 50%, transparent);
        }

        input:focus::placeholder {
         color: transparent;
         }

        .chat-container {
            width: 100%;
            max-width: 6000px;
            text-align: center;
            position: relative;
        }

        .character {
            position: relative;
            display: inline-block;
            animation: float 3s ease-in-out infinite;
        }

        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
            100% { transform: translateY(0px); }
        }

        .character-image {
            margin-bottom: 25px;
            width: 190px;
            height: 190px;
            border-radius: 50%;
            object-fit: cover;
        }

        .speech-bubble {

            color: rgb(245, 66, 102);
            font-weight: bold;

            opacity: 0;
            font-family: 'Open Sans', sans-serif;
            background: radial-gradient(circle at center, rgba(128, 128, 128, 0.15) 15%, rgba(128, 128, 128, 0) 100%);

            padding: 15px;
            max-width: 660px;  /* 최대 너비를 크게 증가 */
            width: calc(100vw - 110px);  /* 뷰포트 너비에 따라 동적으로 조정 */
            top: -30px;
            right: -420px;  /* 오른쪽으로 더 이동 */
            text-align: center;
            word-wrap: break-word;
            font-size: 25px;  /* 글자 크기 조정 */
            line-height: 1.5;  /* 줄 간격 조정 */
        }

        .speech-bubble:after {
            bottom: 30px;  /* 위치 조정 */
            left: -20px;  /* 위치 조정 */
            border-style: solid;
            border-color: transparent #ffffff transparent transparent;
            transform: rotate(-90deg);
            content: '|';
            animation: blink 0.7s infinite;
        }

        @keyframes blink {
        0%, 100% { opacity: 1; }
        50% { opacity: 0; }
}

        .character {
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            top: -60px;
        }

        @media screen and (max-width: 450px) {
          .speech-bubble {
            font-size: 19px;
          }
          #user-input{
            font-size: 10px;
          }
        }

        .user-input {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        #user-input {
            text-align: center;
            width: 100%;
            padding: 10px;
            font-size: 17px;
        }


        #input-form {
            margin-top: 2%;
        }

        #input-form:hover {
            background: radial-gradient(circle at center, rgba(128, 128, 128, 0.1) 30%, rgba(128, 128, 128, 0) 100%);
        }

        #send-button {
              display: none;
        }
    </style>
</head>
<body>
<script>
    function typeWriter(text, elementId, speed = 50) {
    let i = 0;
    const element = document.getElementById(elementId);
    element.style.opacity = '1';
    element.innerHTML = '';

    const specificText = "저는 AI 도우미 '플래비' 입니다! 도움이 필요하신가요?!";

    function typing() {
        if (i < text.length) {
            element.innerHTML += text.charAt(i);
            i++;
            setTimeout(typing, speed);
        } if (text !== specificText) {
            // 타이핑이 완료된 후 n초 뒤에 페이지 새로고침
            setTimeout(() => {
                eraseTextRecursive().then(() => {
                    sleep(800).then(() => {
                    window.location.href = "https://codebox123.synology.me";
                    } );
                });
            }, 15000);
        }
    }

    setTimeout(typing, 0.1);
}

function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}

function eraseTextRecursive() {
    return new Promise((resolve) => {
        const text = document.getElementById('chat-output');
        const interval = setInterval(() => {
            if (text.textContent.length > 0) {
                text.textContent = text.textContent.slice(0, -1);
            } else {
                clearInterval(interval);
                resolve(); // 모든 텍스트가 지워지면 Promise를 resolve
            }
        }, 30);
    });
}

function eraseTextRecursive2() {
    return new Promise((resolve) => {
        const text = document.getElementById('chat-output');
        const interval = setInterval(() => {
            if (text.textContent.length > 0) {
                text.textContent = text.textContent.slice(0, -1);
            } else {
                clearInterval(interval);
                resolve(); // 모든 텍스트가 지워지면 Promise를 resolve
            }
        }, 1);
    });
}

function closeKeyboard() {
  eraseTextRecursive()
  const input = document.getElementById('user-input');
  input.setAttribute('readonly', 'readonly');
  let index = 0;

  function typeThinking() {
    if (index < thinkingText.length) {
      input.value = thinkingText.slice(0, index + 1);
      index++;
      setTimeout(typeThinking, 210); // 각 문자 사이의 지연 시간 (밀리초)
    }
  }
  input.style.color = '#A9A9A9';
  typeThinking(); // 타이핑 효과 시작

  setTimeout(function() {
    input.removeAttribute('readonly');
    eraseTextRecursive2();
  }, 5000);
}

window.onload = function() {
    const chatOutput = document.getElementById('chat-output');
    const responseText = chatOutput.textContent.trim();

    if (responseText) {
        typeWriter(responseText, 'chat-output');
    }
};
</script>
<div class="chat-container">
    <div class="character">
        <img src="character.gif" class="character-image">
        {{#response}}
            <div class="speech-bubble" id="chat-output">{{response}}</div>
        {{/response}}
        {{^response}}
            <div class="speech-bubble" style="text-align: center;" id="chat-output">저는 AI 도우미 '플래비' 입니다! 도움이 필요하신가요?!</div>
        {{/response}}
        <form action="/ai" method="get" id="input-form">
            <hr>
            <input type="text" id="user-input" name="message" placeholder="무엇이 궁금하신가요?" autocomplete="off" style="background-color: transparent; outline: none; border: 0px;">
            <button id="send-button" onclick="closeKeyboard();" >전송</button>
            <hr>
        </form>
    </div>
</div>
<div class="user-input">
</div>
<script src="script.js"></script>
</body>
</html>


